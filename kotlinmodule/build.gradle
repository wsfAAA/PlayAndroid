if (Boolean.valueOf(rootProject.ext.isModule)) {//单独调试
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

// arouter配置
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
//启用扩展支持直接使用ID
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion

    defaultConfig {
        if (Boolean.valueOf(rootProject.ext.isModule)) {//单独调试 加applicationId
            applicationId "kotlintest.com.kotlinmodule"
        }

        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // arouter配置
    kapt {
        generateStubs = true
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    sourceSets {
        main {
            if (Boolean.valueOf(rootProject.ext.isModule)) {//单独调试 加载AndroidManifest
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            } else {//集成调试 加载AndroidManifest
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // arouter配置 kapt取代 annotationProcessor
    kapt rootProject.ext.dependencies["arouter-compiler"]

    implementation project(':commonmodule')//依赖公共库
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}
repositories {
    mavenCentral()
}
