if (Boolean.valueOf(rootProject.ext.isModule)) {//单独调试
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion

    defaultConfig {
        if (Boolean.valueOf(rootProject.ext.isModule)) {//单独调试 加applicationId
            applicationId "playandroid.cmcc.com.loginmodule"
        }

        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 所有使用到 ARouter 的组件和模块的 build.gradle 都要添加
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    //java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
    //（ 或文件夹下的源文件 ） 要被编译 ， 哪些源文件要被排除 。
    sourceSets {
        main {
            if (Boolean.valueOf(rootProject.ext.isModule)) {//单独调试 加载AndroidManifest
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            } else {//集成调试 加载AndroidManifest
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    implementation project(':commonmodule')//依赖公共库
}
